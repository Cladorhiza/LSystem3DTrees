#shader vertex
#version 330 core
layout(location = 0) in vec3 in_Position;
layout(location = 1) in vec4 in_Color;

out vec4 ex_Color;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;



void main()
{
	vec3 lightPosition = vec3(100.f, 100.f, 0.f);
	

	gl_Position = projectionMatrix * viewMatrix * vec4(in_Position, 1.0);
	ex_Color = in_Color;

};

#shader fragment
#version 330 core

in vec4 ex_Color;
out vec4 out_Color;

void main()
{
	out_Color = ex_Color;
};

#shader geometry
#version 330 core
layout (points) in;
layout (points, max_vertices = 1) out;
in vec4 out_Color;
out vec4 ex_Color;

void main() {    
	ex_Color = out_Color;
    gl_Position = gl_in[0].gl_Position; 
    EmitVertex();
    EndPrimitive();
}  